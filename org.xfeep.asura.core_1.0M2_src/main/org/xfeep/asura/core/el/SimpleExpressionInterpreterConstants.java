/* Generated By:JavaCC: Do not edit this line. SimpleExpressionInterpreterConstants.java */
/*******************************************************************************
 * Copyright (c) 2008-2009 zhang yuexiang.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.xfeep.asura.core.el;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface SimpleExpressionInterpreterConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NOT = 5;
  /** RegularExpression Id. */
  int AND = 6;
  /** RegularExpression Id. */
  int OR = 7;
  /** RegularExpression Id. */
  int EQ = 8;
  /** RegularExpression Id. */
  int NEQ = 9;
  /** RegularExpression Id. */
  int GT = 10;
  /** RegularExpression Id. */
  int LT = 11;
  /** RegularExpression Id. */
  int NLT = 12;
  /** RegularExpression Id. */
  int NGT = 13;
  /** RegularExpression Id. */
  int TRUE = 14;
  /** RegularExpression Id. */
  int FALSE = 15;
  /** RegularExpression Id. */
  int NULL = 16;
  /** RegularExpression Id. */
  int NUMBER = 17;
  /** RegularExpression Id. */
  int STRING = 18;
  /** RegularExpression Id. */
  int DIGIT = 19;
  /** RegularExpression Id. */
  int INNERSTR = 20;
  /** RegularExpression Id. */
  int VAR = 21;
  /** RegularExpression Id. */
  int SVAR = 22;
  /** RegularExpression Id. */
  int LETTER = 23;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"!\"",
    "\"&\"",
    "\"|\"",
    "\"=\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"true\"",
    "\"false\"",
    "\"null\"",
    "<NUMBER>",
    "<STRING>",
    "<DIGIT>",
    "<INNERSTR>",
    "<VAR>",
    "<SVAR>",
    "<LETTER>",
  };

}
